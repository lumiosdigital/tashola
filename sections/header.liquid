<div class="nav-container {% if template == 'index' %}home-header{% else %}secondary-header{% endif %} {% if section.settings.sticky_header %}sticky-header{% endif %}"
    data-mobile-nav-container data-sticky-header="{{ section.settings.sticky_header }}">
    <div class="nav-flex-wrapper">

        <!-- NAVIGATION MENU -->
        <nav>
            {% for link in linklists.main-menu.links %}
            <div class="nav-link-container">
                <a href="{{ link.url }}" class="navbar-links">{{ link.title }}</a>
                {% if link.title == 'Catalog' %}
                {% render 'mega-menu' %}
                {% endif %}
            </div>
            {% endfor %}
        </nav>

        <!-- LOGO/STORE NAME -->
        <div class="logo-wrapper">
            <a href="{{ routes.root_url }}">{% render 'main-logo' %}</a>
        </div>

        <!-- SEARCH, ACCOUNT AND CART -->
        <div class="nav-icons">
            <button type="button" class="search-button" aria-label="Search">{% render 'icon-search' %}</button>
            <div class="account-dropdown-wrapper">
                <button type="button" class="account-button" aria-label="Account" aria-expanded="false"
                    aria-controls="account-dropdown">{% render 'icon-account' %}</button>
                <div class="account-dropdown" id="account-dropdown" aria-hidden="true">
                    <div style="position: fixed; top: 100px; right: 10px; background: red; color: white; padding: 10px; z-index: 9999;">
                        {% if customer %}
                        LOGGED IN: {{ customer.email }}
                        {% else %}
                        NOT LOGGED IN
                        {% endif %}
                    </div>
                    {% if customer %}
                    <!-- Customer is logged in -->
                    <a href="{{ routes.account_url }}">My Profile</a>
                    <a href="#swym-wishlist" class="swym-wishlist">My Favourites</a>
                    <a href="{{ routes.account_logout_url }}">Logout</a>
                    {% else %}
                    <!-- Customer is not logged in -->
                    <a href="{{ routes.account_login_url }}">Login</a>
                    <a href="{{ routes.account_register_url }}">Register</a>
                    {% endif %}
                </div>
            </div>
            <button type="button" class="cart-drawer-trigger" aria-label="Cart with {{ cart.item_count }} items"
                aria-controls="cart-drawer">
                {% render 'icon-shopping-bag' %}
                <span class="cart-count" data-count="{{ cart.item_count }}" aria-hidden="true">{{ cart.item_count
                    }}</span>
            </button>
        </div>
    </div>
</div>

{% render 'cart-drawer' %}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const header = document.querySelector('.nav-container');
        let lastScrollTop = 0;
        const scrollThreshold = 10; // Minimum amount of pixels to scroll before showing/hiding

        // Check if sticky header is enabled
        const isStickyHeader = header.getAttribute('data-sticky-header') === 'true';

        // Add transition CSS class to header for smooth animations
        header.classList.add('nav-scrollable');

        // Only apply scroll behavior if not using sticky header
        if (!isStickyHeader) {
            window.addEventListener('scroll', function () {
                const currentScrollTop = window.scrollY || document.documentElement.scrollTop;

                // Determine scroll direction and distance
                if (Math.abs(lastScrollTop - currentScrollTop) <= scrollThreshold) {
                    return; // Skip if the scroll distance is too small
                }

                // Scrolling down & not at the top
                if (currentScrollTop > lastScrollTop && currentScrollTop > header.offsetHeight) {
                    header.classList.add('nav-hidden');
                }
                // Scrolling up or at the top
                else {
                    header.classList.remove('nav-hidden');
                }

                lastScrollTop = currentScrollTop;
            });
        }

        // Add cart drawer trigger functionality
        const cartTrigger = document.querySelector('.cart-drawer-trigger');
        const cartDrawer = document.getElementById('cart-drawer');

        if (cartTrigger && cartDrawer) {
            cartTrigger.addEventListener('click', function () {
                cartDrawer.setAttribute('aria-hidden', 'false');
                document.body.classList.add('drawer-open');
            });
        }
    });
</script>

{% schema %}
{
"name": "Header",
"settings": [
{
"type": "header",
"content": "Navigation Behavior"
},
{
"type": "checkbox",
"id": "sticky_header",
"label": "Always visible header",
"default": false,
"info": "When enabled, the header will always be visible. When disabled, it will hide when scrolling down."
},
{
"type": "image_picker",
"id": "mega_menu_image",
"label": "Mega Menu Image",
"info": "Featured image displayed in the mega menu dropdown"
},
{
"type": "url",
"id": "mega_menu_image_link",
"label": "Mega Menu Image Link",
"info": "Select a link for the featured mega menu image"
}
]
}
{% endschema %}
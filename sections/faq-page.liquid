{% schema %}
{
"name": "FAQ Page",
"tag": "section",
"class": "faq-section",
"settings": [
{
"type": "text",
"id": "title",
"label": "Page Title",
"default": "Frequently Asked Questions"
},
{
"type": "richtext",
"id": "description",
"label": "Page Description",
"default": "<p>Tashola is a jewelry brand dedicated to timeless elegance and modern craftsmanship. Inspired by beauty in simplicity, our pieces are designed to complement every moment, from everyday wear to special occasions. Using high-quality materials like sterling silver, 18K gold plating, and natural gemstones, we create jewelry that is both refined and meaningful.</p>"
}
],
"blocks": [
{
"type": "faq_category",
"name": "FAQ Category",
"limit": 10,
"settings": [
{
"type": "text",
"id": "category_title",
"label": "Category Title",
"default": "Delivery Information"
}
]
},
{
"type": "faq_item",
"name": "FAQ Item",
"settings": [
{
"type": "select",
"id": "category",
"label": "Select Category",
"info": "Choose which category this item belongs to",
"options": [
{
"value": "delivery",
"label": "Delivery Information"
},
{
"value": "payment",
"label": "Payment Options"
},
{
"value": "returns",
"label": "Returns & Refunds"
},
{
"value": "sizing",
"label": "Sizing Guide"
},
{
"value": "care",
"label": "Jewelry Care"
},
{
"value": "warranty",
"label": "Warranty"
},
{
"value": "other",
"label": "Other Information"
}
]
},
{
"type": "text",
"id": "question",
"label": "Question or Title",
"default": "How do you return an item?"
},
{
"type": "richtext",
"id": "answer",
"label": "Answer or Content",
"default": "<p>We offer a 30-day return policy. To return an item, please follow these steps...</p>"
}
]
}
],
"presets": [
{
"name": "FAQ Page",
"blocks": [
{
"type": "faq_category",
"settings": {
"category_title": "Delivery Information"
}
},
{
"type": "faq_item",
"settings": {
"category": "delivery",
"question": "How long does delivery take?",
"answer": "<p>Standard delivery takes 3-5 business days within the UK.</p>"
}
}
]
}
]
}
{% endschema %}

<div class="breadcrumbs-container">
    {% render 'breadcrumbs' %}
</div>

<div class="faq-container">
    <div class="faq-header">
        <h1 class="faq-title">{{ section.settings.title }}</h1>
        <div class="faq-description">
            {{ section.settings.description }}
        </div>
    </div>

    {% comment %} First, we collect all unique categories from the blocks {% endcomment %}
    {% assign categories = "" | split: "" %}
    {% assign category_titles = "" | split: "" %}

    {% for block in section.blocks %}
    {% if block.type == "faq_category" %}
    {% assign title_exists = false %}
    {% for title in category_titles %}
    {% if title == block.settings.category_title %}
    {% assign title_exists = true %}
    {% break %}
    {% endif %}
    {% endfor %}

    {% unless title_exists %}
    {% assign category_titles = category_titles | push: block.settings.category_title %}
    {% assign categories = categories | push: block %}
    {% endunless %}
    {% endif %}
    {% endfor %}

    {% comment %} Now display each category and its items {% endcomment %}
    <div class="faq-content">
        {% for category_block in categories %}
        <div class="faq-section">
            <div class="faq-section-header" aria-expanded="false" aria-controls="category-{{ category_block.id }}">
                <span class="faq-section-title">{{ category_block.settings.category_title }}</span>
                <span class="faq-section-icon">+</span>
            </div>
            <div id="category-{{ category_block.id }}" class="faq-section-content" hidden>
                {% for item_block in section.blocks %}
                {% if item_block.type == "faq_item" %}
                {% assign category_value = "" %}
                {% case item_block.settings.category %}
                {% when "delivery" %}
                {% assign category_value = "Delivery Information" %}
                {% when "payment" %}
                {% assign category_value = "Payment Options" %}
                {% when "returns" %}
                {% assign category_value = "Returns & Refunds" %}
                {% when "sizing" %}
                {% assign category_value = "Sizing Guide" %}
                {% when "care" %}
                {% assign category_value = "Jewelry Care" %}
                {% when "warranty" %}
                {% assign category_value = "Warranty" %}
                {% when "other" %}
                {% assign category_value = "Other Information" %}
                {% endcase %}

                {% if category_value == category_block.settings.category_title %}
                <div class="faq-item" {{ item_block.shopify_attributes }}>
                    <div class="faq-question" aria-expanded="false" aria-controls="faq-answer-{{ item_block.id }}">
                        <span>{{ item_block.settings.question }}</span>
                        <span class="faq-item-icon">+</span>
                    </div>
                    <div id="faq-answer-{{ item_block.id }}" class="faq-answer" hidden>
                        {{ item_block.settings.answer }}
                    </div>
                </div>
                {% endif %}
                {% endif %}
                {% endfor %}
            </div>
        </div>
        {% endfor %}
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Accordion functionality for sections
        const sectionHeaders = document.querySelectorAll('.faq-section-header');

        sectionHeaders.forEach(header => {
            header.addEventListener('click', function () {
                const content = document.getElementById(this.getAttribute('aria-controls'));
                const isExpanded = this.getAttribute('aria-expanded') === 'true';

                // Toggle expanded state
                this.setAttribute('aria-expanded', !isExpanded);

                // Toggle content visibility
                if (isExpanded) {
                    content.hidden = true;
                    this.querySelector('.faq-section-icon').textContent = '+';
                } else {
                    content.hidden = false;
                    this.querySelector('.faq-section-icon').textContent = '−';
                }
            });
        });

        // Accordion functionality for questions
        const questionElements = document.querySelectorAll('.faq-question');

        questionElements.forEach(question => {
            question.addEventListener('click', function () {
                const answer = document.getElementById(this.getAttribute('aria-controls'));
                const isExpanded = this.getAttribute('aria-expanded') === 'true';

                // Toggle expanded state
                this.setAttribute('aria-expanded', !isExpanded);

                // Toggle answer visibility
                if (isExpanded) {
                    answer.hidden = true;
                    this.querySelector('.faq-item-icon').textContent = '+';
                } else {
                    answer.hidden = false;
                    this.querySelector('.faq-item-icon').textContent = '−';
                }
            });
        });
    });
</script>

<style>
    .breadcrumbs-container {
        margin: 0 auto;
        padding: 2.5rem 3.75rem 0;
        margin-top: var(--header-height);
        background-color: #F6F4F3;
    }

    .faq-container {
        margin: 0 auto;
        padding: 2.5rem 3.75rem 6.5rem;
        background-color: #F6F4F3;
    }

    /* Header Section */
    .faq-header {
        margin-bottom: 4.5rem;
        max-width: 100%;
        text-align: center;
    }

    .faq-title {
        font-family: var(--font-heading);
        font-size: 2.75rem;
        color: var(--color-text);
        margin: 0 0 1.5rem;
        font-weight: 600;
    }

    .faq-description {
        text-align: left;
        font-family: var(--font-heading);
        font-size: 1.125rem;
        line-height: 1.6;
        color: var(--color-text);
        max-width: 900px;
        margin: 0 auto;
    }

    /* FAQ Content */
    .faq-content {
        max-width: 900px;
        margin: 0 auto;
    }

    .faq-section {
        margin-bottom: 1.5rem;
        border-bottom: 1px solid rgba(55, 55, 54, 0.1);
    }

    .faq-section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem 0;
        cursor: pointer;
        font-family: var(--font-body);
        font-size: 1.25rem;
        font-weight: 500;
        color: var(--color-text);
    }

    .faq-section-icon {
        font-size: 1.5rem;
        font-weight: 300;
        transition: transform 0.3s ease;
    }

    .faq-section-content {
        padding: 0 0 1.5rem;
    }

    .faq-item {
        margin-bottom: 1rem;
        border-bottom: 1px solid rgba(55, 55, 54, 0.05);
    }

    .faq-question {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.5rem;
        cursor: pointer;
        font-family: var(--font-body);
        font-size: 1rem;
        font-weight: 500;
        color: var(--color-text);
    }

    .faq-item-icon {
        font-size: 1.25rem;
        font-weight: 300;
        transition: transform 0.3s ease;
    }

    .faq-answer {
        padding: 0 1.5rem 1.5rem;
        font-family: var(--font-body);
        font-size: 0.9375rem;
        line-height: 1.6;
        color: var(--color-text);
    }

    /* Responsive Styles */
    @media screen and (max-width: 992px) {
        .breadcrumbs-container {
            padding: 0 2rem;
        }

        .faq-container {
            padding: 2rem 2rem 4rem;
        }

        .faq-title {
            font-size: 2.25rem;
        }
    }

    @media screen and (max-width: 768px) {
        .breadcrumbs-container {
            padding: 0 1.5rem;
        }

        .faq-container {
            padding: 1.5rem 1.5rem 3rem;
        }

        .faq-title {
            font-size: 2rem;
        }

        .faq-description {
            font-size: 1rem;
        }

        .faq-section-header {
            font-size: 1.125rem;
        }
    }

    @media screen and (max-width: 576px) {
        .breadcrumbs-container {
            padding: 0 1rem;
        }

        .faq-container {
            padding: 1rem 1rem 2rem;
        }

        .faq-title {
            font-size: 1.75rem;
        }

        .faq-section-header {
            font-size: 1rem;
        }

        .faq-question {
            padding: 0.875rem 1rem;
            font-size: 0.9375rem;
        }

        .faq-answer {
            padding: 0 1rem 1rem;
            font-size: 0.875rem;
        }
    }
</style>